heapSort(a[], n) 
   for (i ← n/2; i ≥ 1; i ← i-1) do          // 배열 a[]를 히프로 변환 
       heapify(a, i, n);        	     // i는 내부 노드 
   for (i ← n-1; i ≥ 1; i ← i-1) do {        // 배열 a[]를 오름차순으로 정렬 
       a[1]과 a[i+1]을 교환;    // a[1]은 제일 큰 원소 
       heapify(a, 1, i); 
   } 
end heapSort() 

heapify(a[], h, m) 
       // 루트 h를 제외한 h의 왼쪽 서브트리와 오른쪽 서브트리는 히프 
       // 현재 시점으로 노드의 최대 레벨 순서 번호는 m 
   v ← a[h]; 
   for (j ← 2*h; j ≤ m; j ← 2*j) do { 
      if (j < m and a[j] < a[j+1]) then j ← j+1;  
                                 // j는 값이 큰 왼쪽 또는 오른쪽 자식 노드 
      if (v ≥ a[j]) then exit; 
      else a[j/2] ← a[j];        // a[j]를 부모 노드로 이동 
   } 
   a[j/2] ← v; 
end heapify() 
